{"ast":null,"code":"var _jsxFileName = \"/home/lautaro/personal/ReciplasTS/frontend/src/componentes/AGTable.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useMemo, useRef, useCallback } from \"react\";\n// AG-Grid\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/styles/ag-grid.css\";\nimport \"ag-grid-community/styles/ag-theme-alpine.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AGTable({\n  endpointPath\n}) {\n  _s();\n  const gridRef = useRef(null);\n  const [rowData, setRowData] = useState();\n  const [columnDefs, setColumnDefs] = useState();\n  const defaultColDef = useMemo(() => ({\n    sortable: true,\n    filter: true,\n    resizable: true,\n    floatingFilter: true\n  }), []);\n  useEffect(() => {\n    // fetch('https://www.ag-grid.com/example-assets/row-data.json')\n    fetch(\"http://127.0.0.1:8000/api/clientes/\").then(result => result.text()).then(json => console.log(json));\n    // .then(data => {\n    //   const colDefs = gridRef.current?.api?.getColumnDefs();\n    //   if (colDefs){\n    //       colDefs.length=0;\n    //       const keys = Object.keys(data[0])\n    //       keys.forEach(key => colDefs.push({field : key}));\n    //       console.log(data)\n    //   }\n    //   setColumnDefs(colDefs);\n    //   setRowData(data);\n    //   })\n  }, []);\n\n  // Esto es para que el ancho de las columnas de la tabla se actualizen para usar todo el ancho de la ventana.\n  const sizeToFit = useCallback(() => {\n    var _gridRef$current, _gridRef$current$api;\n    (_gridRef$current = gridRef.current) === null || _gridRef$current === void 0 ? void 0 : (_gridRef$current$api = _gridRef$current.api) === null || _gridRef$current$api === void 0 ? void 0 : _gridRef$current$api.sizeColumnsToFit({});\n  }, []);\n  useEffect(() => {\n    window.addEventListener('resize', sizeToFit);\n    return () => {\n      window.removeEventListener('resize', sizeToFit);\n    };\n  }, []);\n\n  // TODO: HACER QUE sizeToFit se ejecute cuando se carga la ventana por primera vez.\n  // Me parece que esto no funciona por c칩mo est치 definido sizeToFit.\n  // useEffect(() => {\n  //     console.log(\"ACA DEBERIA FUNCIONAR!\")\n  //     sizeToFit\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-theme-alpine\",\n      style: {\n        height: 650\n      },\n      children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n        ref: gridRef,\n        rowData: rowData,\n        columnDefs: columnDefs,\n        defaultColDef: defaultColDef,\n        rowSelection: \"multiple\",\n        animateRows: true,\n        pagination: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(AGTable, \"d4LOoCZnGlevIjBn5lp3MzCwREs=\");\n_c = AGTable;\nvar _c;\n$RefreshReg$(_c, \"AGTable\");","map":{"version":3,"names":["useState","useEffect","useMemo","useRef","useCallback","AgGridReact","jsxDEV","_jsxDEV","AGTable","endpointPath","_s","gridRef","rowData","setRowData","columnDefs","setColumnDefs","defaultColDef","sortable","filter","resizable","floatingFilter","fetch","then","result","text","json","console","log","sizeToFit","_gridRef$current","_gridRef$current$api","current","api","sizeColumnsToFit","window","addEventListener","removeEventListener","children","className","style","height","ref","rowSelection","animateRows","pagination","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/lautaro/personal/ReciplasTS/frontend/src/componentes/AGTable.tsx"],"sourcesContent":["import {useState, useEffect, useMemo, useRef, useCallback} from \"react\";\n// AG-Grid\nimport {AgGridReact} from \"ag-grid-react\";\nimport {ColDef, GridApi} from \"ag-grid-community\"\nimport \"ag-grid-community/styles/ag-grid.css\";\nimport \"ag-grid-community/styles/ag-theme-alpine.css\";\n\nexport function AGTable({endpointPath}:{endpointPath: string }) {\n\n    const gridRef = useRef<AgGridReact | null>(null);\n    const [rowData, setRowData] = useState();\n    const [columnDefs, setColumnDefs] = useState<ColDef[]>();\n\n    const defaultColDef = useMemo( () => ({\n        sortable: true,\n        filter: true,\n        resizable: true,\n        floatingFilter: true,\n    }), []);\n\n    useEffect(() => {\n    // fetch('https://www.ag-grid.com/example-assets/row-data.json')\n      fetch(\"http://127.0.0.1:8000/api/clientes/\")\n      .then(result => result.text())\n      .then(json => console.log(json))\n      // .then(data => {\n      //   const colDefs = gridRef.current?.api?.getColumnDefs();\n      //   if (colDefs){\n      //       colDefs.length=0;\n      //       const keys = Object.keys(data[0])\n      //       keys.forEach(key => colDefs.push({field : key}));\n      //       console.log(data)\n      //   }\n      //   setColumnDefs(colDefs);\n      //   setRowData(data);\n      //   })\n      }, []);\n     \n\n    // Esto es para que el ancho de las columnas de la tabla se actualizen para usar todo el ancho de la ventana.\n    const sizeToFit = useCallback(() => {\n        gridRef.current?.api?.sizeColumnsToFit({});\n    }, []);\n    \n    useEffect(() => {\n        window.addEventListener('resize', sizeToFit);\n        return () => {\n        window.removeEventListener('resize', sizeToFit);\n        };\n    }, []);\n\n    // TODO: HACER QUE sizeToFit se ejecute cuando se carga la ventana por primera vez.\n    // Me parece que esto no funciona por c칩mo est치 definido sizeToFit.\n    // useEffect(() => {\n    //     console.log(\"ACA DEBERIA FUNCIONAR!\")\n    //     sizeToFit\n    // }, []);\n    \n    return (\n    <div>\n        <div className ='ag-theme-alpine' style={{height: 650}}>\n            <AgGridReact \n                ref = {gridRef}\n                rowData={rowData}\n                columnDefs={columnDefs}\n                defaultColDef ={defaultColDef}\n                rowSelection='multiple'\n                animateRows = {true}\n                pagination = {true}\n            />\n        </div>\n    </div>\n    )\n}\n\n"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEC,MAAM,EAAEC,WAAW,QAAO,OAAO;AACvE;AACA,SAAQC,WAAW,QAAO,eAAe;AAEzC,OAAO,sCAAsC;AAC7C,OAAO,8CAA8C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,OAAO,SAASC,OAAOA,CAAC;EAACC;AAAoC,CAAC,EAAE;EAAAC,EAAA;EAE5D,MAAMC,OAAO,GAAGR,MAAM,CAAqB,IAAI,CAAC;EAChD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,CAAC;EACxC,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAW,CAAC;EAExD,MAAMgB,aAAa,GAAGd,OAAO,CAAE,OAAO;IAClCe,QAAQ,EAAE,IAAI;IACdC,MAAM,EAAE,IAAI;IACZC,SAAS,EAAE,IAAI;IACfC,cAAc,EAAE;EACpB,CAAC,CAAC,EAAE,EAAE,CAAC;EAEPnB,SAAS,CAAC,MAAM;IAChB;IACEoB,KAAK,CAAC,qCAAqC,CAAC,CAC3CC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,CAC7BF,IAAI,CAACG,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC;IAChC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA,CAAC,EAAE,EAAE,CAAC;;EAGR;EACA,MAAMG,SAAS,GAAGxB,WAAW,CAAC,MAAM;IAAA,IAAAyB,gBAAA,EAAAC,oBAAA;IAChC,CAAAD,gBAAA,GAAAlB,OAAO,CAACoB,OAAO,cAAAF,gBAAA,wBAAAC,oBAAA,GAAfD,gBAAA,CAAiBG,GAAG,cAAAF,oBAAA,uBAApBA,oBAAA,CAAsBG,gBAAgB,CAAC,CAAC,CAAC,CAAC;EAC9C,CAAC,EAAE,EAAE,CAAC;EAENhC,SAAS,CAAC,MAAM;IACZiC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEP,SAAS,CAAC;IAC5C,OAAO,MAAM;MACbM,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAER,SAAS,CAAC;IAC/C,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACArB,OAAA;IAAA8B,QAAA,eACI9B,OAAA;MAAK+B,SAAS,EAAE,iBAAiB;MAACC,KAAK,EAAE;QAACC,MAAM,EAAE;MAAG,CAAE;MAAAH,QAAA,eACnD9B,OAAA,CAACF,WAAW;QACRoC,GAAG,EAAI9B,OAAQ;QACfC,OAAO,EAAEA,OAAQ;QACjBE,UAAU,EAAEA,UAAW;QACvBE,aAAa,EAAGA,aAAc;QAC9B0B,YAAY,EAAC,UAAU;QACvBC,WAAW,EAAI,IAAK;QACpBC,UAAU,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACtC,EAAA,CAlEeF,OAAO;AAAAyC,EAAA,GAAPzC,OAAO;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}